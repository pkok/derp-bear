#!/usr/bin/env python
import argparse
import cPickle
import os

import parser
import smoothing

PICKLE_SUFFIX = os.path.extsep + "pkl"
PCFG_FILE = "pcfg" + PICKLE_SUFFIX
TRAIN_TREES_FILE = "train_trees" + PICKLE_SUFFIX

def no_pickles():
    """Remove all pickled files, so there is no cached data."""
    for pickle_file in [locals()[t] for t in locals() if t.endswith("_FILE")]:
        os.remove(pickle_file)

def step1(train_file):
    """Returns the PCFG grammar generated by the train_file's syntax trees.

    It will first look for pickled versions of the grammar, as the computation
    can take some time.
    """
    if os.path.exists(PCFG_FILE):
        return cPickle.load(open(PCFG_FILE))

    if os.path.exists(TRAIN_TREES_FILE):
        train_trees = cPickle.load(open(TRAIN_TREES_FILE))
    else:
        print "Interpreting each training tree..."
        train_trees = parser.parse_tree_file(train_file)
        cPickle.dump(train_trees, open(TRAIN_TREES_FILE, 'w'))
    print "Extracting rules from the parse trees..."
    grammar = parser.extract_rules(train_trees)
    cPickle.dump(grammar, open(PCFG_FILE, 'w'))
    return grammar

def main():
    """Main method, doing all steps of the project after each other.
    
    It even sets up the environment so it has the right modules installed!"""
    try:
        import pyparsing
    except ImportError:
        print "Please run the next line before running this code:"
        print "    easy_install pyparsing"
        print "If easy_install is unrecognized on your system, run first:"
        print "    python ez_setup.py"
        sys.exit(1)

    argument_parser = argparse.ArgumentParser(description="")
    argument_parser.add_argument(
        "-f", "--file", dest="input_file", type=file, required=True
        help="Location of parse trees meant for training.")
    argument_parser.add_argument(
        "-s", "--smooth", dest="smoothing", type=str.lower, 
        choices=smoothing.functions.keys(),
        default='none',
        help="Smoothing model of the probabilities")
    args = argument_parser.parse_arguments()

    smoothing_fn = smoothing.functions[args.smoothing]
    pcfg = smoothing_fn(step1(args.input_file))


if __name__ == "__main__":
    main();
